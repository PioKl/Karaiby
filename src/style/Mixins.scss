/* MEDIA QUERIES */


@mixin mobilePortrait {
    @media (min-width: #{$bp-small-portraitWidth}) and (orientation: portrait) {
        @content;
    }
}

@mixin mobileLandscape {
    @media (min-width: #{$bp-smaller-landscapeWidth}) and (orientation: landscape) {
        @content;
    }
}

@mixin desktopLandscape {
    @media (min-width: #{$bp-small-landscapeWidth}) and (orientation: landscape) {
        @content;
    }
}

@mixin desktopMediumLandscape {
    @media (min-width: #{$bp-medium-landscapeWidth}) and (orientation: landscape) {
        @content;
    }
}


/* Portrait Mixins */

@mixin fontLinePortrait($arg...) {
    @if length($arg==2) {
        font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
    }

    @if length($arg==4) {
        line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
    }

}

@mixin font-sizePortrait($min, $max) {
    font-size: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin line-heightPortrait($min, $max) {
    font-size: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin margin-leftPortrait($min, $max) {
    margin-left: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin padding-leftPortrait($min, $max) {
    padding-left: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin paddingPortrait($minTopBottom, $maxTopBottom, $minLeftRight, $maxLeftRight) {
    padding: calc(#{$minTopBottom}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$maxTopBottom} - #{$minTopBottom})) calc(#{$minLeftRight}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$maxLeftRight} - #{$minLeftRight}));
}

@mixin width-heightPortrait($min, $max) {
    width: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    height: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin widthPortrait($min, $max) {
    width: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin heightPortrait($min, $max) {
    height: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin background-sizePortrait($min, $max) {
    background-size: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min})) calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin border-widthPortrait($min, $max) {
    border-width: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

@mixin topPortrait($min, $max) {
    top: calc(#{$min}rem + (((100vw - #{$bp-small-portraitWidth/1em*1.6rem}) / (#{$bp-large-portraitWidth/1em * 1.6} - #{$bp-small-portraitWidth/1em * 1.6}))) * (#{$max} - #{$min}));
}

/* Portrait Mixins ENDS */




/* =====================================================================================================================================
                                                        Landscape Mixins 
======================================================================================================================================*/
//arg 1 to bedzie min font size, 2 max font-size, 3 to min line-height, a 4 to max line-height
@mixin fontLineLandscape3($arg...) {
    @if length($arg==2) {
        font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
    }

    @if length($arg==4) {
        line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
    }

}

@mixin fontLineLandscape($size, $arg...) {
    @if($size==universal) {
        @if length($arg==2) {
            font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
        }

        @if length($arg==4) {
            line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
        }
    }

    @else if($size==mobile) {
        @if length($arg==2) {
            font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
        }

        @if length($arg==4) {
            line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
        }
    }

    @else if($size==desktop) {
        @if length($arg==2) {
            font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
        }

        @if length($arg==4) {
            line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
        }
    }

    @else if($size==desktopMedium) {
        @if length($arg==2) {
            font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
        }

        @if length($arg==4) {
            line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
        }
    }
}



@mixin fontLineLandscape2($size, $arg...) {
    @if($size==mobile) {
        @if length($arg==2) {
            font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
        }

        @if length($arg==4) {
            line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
        }
    }

    @else if($size==desktop) {
        @if length($arg==2) {
            font-size: calc(#{nth($arg, 1)}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 2)} - #{nth($arg, 1)}));
        }

        @if length($arg==4) {
            line-height: calc(#{nth($arg, 3)}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{nth($arg, 4)} - #{nth($arg, 3)}));
        }
    }
}

@mixin font-sizeLandscape($size, $min, $max) {
    @if($size==universal) {
        font-size: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        font-size: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        font-size: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        font-size: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

}

@mixin line-heightLandscape($size, $min, $max) {
    @if($size==universal) {
        line-height: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        line-height: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        line-height: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        line-height: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin margin-leftLandscape($size, $min, $max) {

    @if($size==universal) {
        margin-left: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        margin-left: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        margin-left: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        margin-left: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin padding-leftLandscape($size, $min, $max) {

    @if($size==universal) {
        padding-left: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        padding-left: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        padding-left: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        padding-left: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin paddingLandscape($size, $minTopBottom, $maxTopBottom, $minLeftRight, $maxLeftRight) {
    padding: calc(#{$minTopBottom}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$maxTopBottom} - #{$minTopBottom})) calc(#{$minLeftRight}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$maxLeftRight} - #{$minLeftRight}));


    @if($size==universal) {
        padding: calc(#{$minTopBottom}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$maxTopBottom} - #{$minTopBottom})) calc(#{$minLeftRight}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$maxLeftRight} - #{$minLeftRight}));
    }

    @else if($size==mobile) {
        padding: calc(#{$minTopBottom}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$maxTopBottom} - #{$minTopBottom})) calc(#{$minLeftRight}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$maxLeftRight} - #{$minLeftRight}));
    }

    @else if($size==desktop) {
        padding: calc(#{$minTopBottom}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$maxTopBottom} - #{$minTopBottom})) calc(#{$minLeftRight}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$maxLeftRight} - #{$minLeftRight}));
    }

    @else if ($size==desktopMedium) {
        padding: calc(#{$minTopBottom}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$maxTopBottom} - #{$minTopBottom})) calc(#{$minLeftRight}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$maxLeftRight} - #{$minLeftRight}));
    }
}

@mixin width-heightLandscape($size, $min, $max) {

    @if($size==universal) {
        width: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
        height: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        width: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
        height: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        width: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
        height: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        width: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
        height: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin widthLandscape($size, $min, $max) {

    @if($size==universal) {
        width: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        width: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        width: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        width: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin heightLandscape($size, $min, $max) {

    @if($size==universal) {
        height: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        height: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        height: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        height: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin heightLandscape2($size, $min, $max) {
    @if($size==mobile) {
        height: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        height: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin background-sizeLandscape($size, $min, $max) {
    background-size: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min})) calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));

    @if($size==universal) {
        background-size: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min})) calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        background-size: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min})) calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        background-size: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min})) calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        background-size: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min})) calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin border-widthLandscape($size, $min, $max) {

    @if($size==universal) {
        border-width: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        border-width: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        border-width: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        border-width: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

@mixin topLandscape($size, $min, $max) {

    @if($size==universal) {
        top: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==mobile) {
        top: calc(#{$min}rem + (((100vw - #{$bp-smaller-landscapeWidth/1em*1.6rem}) / (#{$bp-small-landscapeWidth/1em * 1.6} - #{$bp-smaller-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if($size==desktop) {
        top: calc(#{$min}rem + (((100vw - #{$bp-small-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-small-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }

    @else if ($size==desktopMedium) {
        top: calc(#{$min}rem + (((100vw - #{$bp-medium-landscapeWidth/1em*1.6rem}) / (#{$bp-large-landscapeWidth/1em * 1.6} - #{$bp-medium-landscapeWidth/1em * 1.6}))) * (#{$max} - #{$min}));
    }
}

/* =============================================================================================================================
                                                    Landscape Mixins ENDS
============================================================================================================================== */
@mixin buttonReset {
    background: transparent;
    border: none;
    outline: none;
}

@mixin sectionBanner($width, $height, $border, $fontSize, $lineHeight, $content, $absolute) {
    @if($absolute==yes) {
        @include absoluteCenter;
    }

    @else {
        position: relative;
        left: 50%;
        transform: translateX(-50%);
    }

    @include flex-center;
    width: $width;
    height: $height;
    background: rgba(134, 112, 112, 0.76);
    border: $border solid #FFFFFF;
    color: white;

    &::after {
        content: "#{$content}";
        font-size: $fontSize;
        line-height: $lineHeight;
        font-family: $fontAbril;
        font-weight: 400;
        text-transform: uppercase;
    }
}

@mixin absoluteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin flex-spaceBetweenCenter {
    display: flex;
    justify-content: space-between;
    align-items: center;
}



/* Box */
@mixin box($width, $height: $width) {
    width: $width;
    height: $height;
}

/* ===== Usage ===== */
/* div {
    // You can pass width && height
    @include box(200px, 300px);
    //or just pass width and the height
    //will default to the width value
    @include box(200px);
  } */

/* Flexbox Toolkit */
@mixin flex-column {
    display: flex;
    flex-direction: column;
}

@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-center-column {
    @include flex-center;
    flex-direction: column;
}

@mixin flex-center-vert {
    display: flex;
    align-items: center;
}

@mixin flex-center-horiz {
    display: flex;
    justify-content: center;
}

/* ===== Usage ===== */
/* .vertical-centered-element {
    @include flex-center-vert;
}

.horizontally-centered-element {
    flex-direction: column;
    @include flex-center-vert;
} */



/* Cover Background */
@mixin cover-background {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

/* ===== Usage ===== */
/* div {
    background-image: url("cute-doggo.png");
    @include cover-background;
} */

/* Pseudo */

@mixin pseudo($width: 100%,
    $height: 100%,
    $display: inline-block,
    $pos: absolute,
    $content: ""

) {
    content: $content;
    display: $display;
    position: $pos;
    @include box($width, $height);
}


/* ===== Usage ===== */
/* div {
    position: relative;
    width: 200px;
    height: 200px;

    &:after {
        @include pseudo(100px, 100px);
    }
} */


/* ANIMATIONS */


@mixin animation($str) {
    animation: #{$str};
}

@mixin bounceAnimation($delay) {
    animation: bounceAlpha 1.4s #{$delay}s infinite;
}

@keyframes bounceAlpha {
    0% {
        opacity: 1;
        transform: translateY(0px) scale(1);
    }

    25% {
        opacity: 0;
        transform: translateY(10px) scale(0.9);
    }

    26% {
        opacity: 0;
        transform: translateY(-10px) scale(0.9);
    }

    55% {
        opacity: 1;
        transform: translateY(0px) scale(1);
    }
}

@keyframes transitionImg {
    from {
        filter: blur(10px);
        opacity: 0;
    }

    to {
        filter: blur(0px);
        opacity: 1;
    }
}